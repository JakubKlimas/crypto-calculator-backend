swagger: '2.0'
info:
  title: Portfolio API
  version: '1.0.0'
  description: API for managing portfolio assets.

paths:
  # [GET] portfolio/{walletId}
  /portfolio/{walletId}:
    get:
      tags:
        - portfolio
      summary: Get all portfolio by walletId
      parameters:
        - name: walletId
          in: path
          description: Wallet Id
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        404:
          description: 'Portfolio not found'
        500:
          description: 'Server Error'

  # [GET] portfolio/account-balance/{walletId}
  /portfolio/account-balance/{walletId}:
    get:
      tags:
        - portfolio
      summary: Get account balance by walletId
      parameters:
        - name: walletId
          in: path
          description: Wallet Id
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        404:
          description: 'Account balance not found'
        500:
          description: 'Server Error'

  # [POST] portfolio
  /portfolio:
    post:
      tags:
        - portfolio
      summary: Create a new portfolio
      parameters:
        - name: body
          in: body
          description: Portfolio Data
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioDto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  # [PUT] portfolio/update-asset
  /portfolio/update-asset:
    put:
      tags:
        - portfolio
      summary: Update asset in portfolio
      parameters:
        - name: body
          in: body
          description: Asset update data
          required: true
          schema:
            $ref: '#/definitions/UpdateAssetDto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  # [DELETE] portfolio/remove-asset
  /portfolio/remove-asset:
    delete:
      tags:
        - portfolio
      summary: Remove asset from portfolio
      parameters:
        - name: body
          in: body
          description: Asset removal data
          required: true
          schema:
            $ref: '#/definitions/RemoveAssetDto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  # [DELETE] portfolio/remove-portfolio
  /portfolio/remove-portfolio:
    delete:
      tags:
        - portfolio
      summary: Remove entire portfolio by walletId and name
      parameters:
        - name: body
          in: body
          description: Portfolio removal data
          required: true
          schema:
            $ref: '#/definitions/RemovePortfoliotDto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'
    
  # [GET] wallet
  /wallet:
    get:
      tags:
        - wallet
      summary: Get all wallets
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [POST] wallet
    post:
      tags:
        - wallet
      summary: Create a new wallet
      parameters:
        - name: body
          in: body
          description: Wallet Data
          required: true
          schema:
            $ref: '#/definitions/CreateWalletDto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  # [DELETE] wallet/{walletId}
  /wallet/{walletId}:
    delete:
      tags:
        - wallet
      summary: Remove wallet by walletId
      parameters:
        - name: walletId
          in: path
          description: Wallet Id
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        404:
          description: 'Wallet not found'
        500:
          description: 'Server Error'

  # [GET] crypto-info/chart/{symbol}/{interval}
  /crypto-info/chart/{symbol}/{interval}:
    get:
      tags:
        - crypto
      summary: Get crypto chart data by symbol
      parameters:
        - name: symbol
          in: path
          description: Cryptocurrency symbol (e.g., BTC, ETH)
          required: true
          type: string
        - name: interval
          in: path
          description: Time interval for the chart data (e.g., 1m, 5m, 1h)
          required: false
          type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        404:
          description: 'Data not found'
        500:
          description: 'Server Error'

  # [GET] crypto-info/data-symbol/{symbol}
  /crypto-info/data-symbol/{symbol}:
    get:
      tags:
        -  crypto
      summary: Get crypto market data by symbol
      parameters:
        - name: symbol
          in: path
          description: Cryptocurrency symbol (e.g., BTC, ETH)
          required: true
          type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        404:
          description: 'Data not found'
        500:
          description: 'Server error'

  # [GET] crypto-info/data-symbols
  /crypto-info/data-symbols:
    get:
      tags:
        - crypto
      summary: Get crypto data by symbols
      parameters:
        - name: symbols
          in: query
          description: Comma-separated list of cryptocurrency symbols (e.g., BTC,ETH,XRP)
          required: true
          type: string
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  description: Cryptocurrency data
              message:
                type: string
                example: 'findDataByCryptoSymbols'
        400:
          description: 'Invalid or missing "symbols" parameter'
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'Invalid or missing "symbols" parameter'
        500:
          description: 'Server Error'

  # [GET] crypto-info/data-name/{name}
  /crypto-info/data-name/{name}:
    get:
      tags:
        - crypto
      summary: Get crypto data by name
      parameters:
        - name: name
          in: path
          description: Name of the cryptocurrency (e.g., Bitcoin, Ethereum)
          required: true
          type: string
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: object
                description: Cryptocurrency data for the given name
              message:
                type: string
                example: 'findDataByCryptoName'
        404:
          description: 'Cryptocurrency data not found'
        500:
          description: 'Server Error'

  # [GET] crypto-info/top-10-coins
  /crypto-info/top-10-coins:
    get:
      tags:
        - crypto
      summary: Get data for the top 10 cryptocurrencies
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  description: Data for a single cryptocurrency
              message:
                type: string
                example: 'findTop10Crypto'
        500:
          description: 'Server Error'

  # [GET] alternative-api/fng
  /alternative-api/fng:
    get:
      tags:
        - alternative-api
      summary: Get Fear and Greed Index
      description: Retrieve the Fear and Greed Index, which indicates the market sentiment based on multiple factors.
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              index:
                type: number
                description: The Fear and Greed Index value (e.g., 0-100).
              sentiment:
                type: string
                description: The sentiment label (e.g., Fear, Greed, Neutral).
              updated_at:
                type: string
                format: date-time
                description: The timestamp of the latest index update.
        500:
          description: 'Server Error'

definitions:
  CreatePortfolioDto:
    type: object
    required:
      - name
      - market
      - symbol
      - price
      - currency
      - amount
      - walletId
    properties:
      name:
        type: string
        description: Portfolio name
      market:
        type: string
        description: Market type
      symbol:
        type: string
        description: Asset symbol
      price:
        type: number
        description: Asset price
      currency:
        type: string
        description: Currency
      amount:
        type: number
        description: Asset amount
      walletId:
        type: string
        description: Wallet ID

  UpdateAssetDto:
    type: object
    required:
      - id
      - amount
      - price
    properties:
      id:
        type: string
        description: Asset ID
      amount:
        type: number
        description: Updated asset amount
      price:
        type: number
        description: Updated asset price

  RemoveAssetDto:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Asset ID to remove

  RemovePortfoliotDto:
    type: object
    required:
      - walletId
      - name
    properties:
      walletId:
        type: string
        description: Wallet ID
      name:
        type: string
        description: Portfolio name to remove

  CreateWalletDto:
    type: object
    required:
      - name
      - avatarType
    properties:
      name:
        type: string
        description: Wallet name
      avatarType:
        type: number
        description: Avatar type for the wallet

schemes:
  - https
  - http
